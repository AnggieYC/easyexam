{"remainingRequest":"/home/anggie/easy-exam-grupo-ii/Implementation/frontend/easyexam/node_modules/babel-loader/lib/index.js!/home/anggie/easy-exam-grupo-ii/Implementation/frontend/easyexam/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/anggie/easy-exam-grupo-ii/Implementation/frontend/easyexam/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anggie/easy-exam-grupo-ii/Implementation/frontend/easyexam/src/components/Problem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/anggie/easy-exam-grupo-ii/Implementation/frontend/easyexam/src/components/Problem.vue","mtime":1574864847662},{"path":"/home/anggie/easy-exam-grupo-ii/Implementation/frontend/easyexam/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anggie/easy-exam-grupo-ii/Implementation/frontend/easyexam/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/anggie/easy-exam-grupo-ii/Implementation/frontend/easyexam/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anggie/easy-exam-grupo-ii/Implementation/frontend/easyexam/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIi9ob21lL2FuZ2dpZS9lYXN5LWV4YW0tZ3J1cG8taWkvSW1wbGVtZW50YXRpb24vZnJvbnRlbmQvZWFzeWV4YW0vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczMvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovL2ltcG9ydCBUZXhWaXp1YWxpemVyIGZyb20gIi4uL2NvbXBvbmVudHMvVGV4Vml6dWFsaXplciI7CmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CmltcG9ydCBNdWx0aXNlbGVjdCBmcm9tICJ2dWUtbXVsdGlzZWxlY3QiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwppbXBvcnQgeyB2YWxpZGF0aW9uTWl4aW4gfSBmcm9tICd2dWVsaWRhdGUnOwppbXBvcnQgeyBtaW5MZW5ndGgsIHJlcXVpcmVkIH0gZnJvbSAndnVlbGlkYXRlL2xpYi92YWxpZGF0b3JzJzsKaW1wb3J0IHsgcGFyc2UsIEh0bWxHZW5lcmF0b3IgfSBmcm9tICdsYXRleC5qcyc7CmltcG9ydCBrYXRleCBmcm9tICdrYXRleCc7CmltcG9ydCAna2F0ZXgvZGlzdC9rYXRleC5taW4uY3NzJzsKZXhwb3J0IGRlZmF1bHQgewogIG1peGluczogW3ZhbGlkYXRpb25NaXhpbl0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRpc21pc3NTZWNzOiA1LAogICAgICBkaXNtaXNzQ291bnREb3duQm9keTogMCwKICAgICAgZGlzbWlzc0NvdW50RG93blRhZ3M6IDAsCiAgICAgIGRpc21pc3NDb3VudERvd25UaXRsZTogMCwKICAgICAgdGFnczogW10sCiAgICAgIGlucHV0X3R5cGVzOiBbewogICAgICAgIGlkOiAxLAogICAgICAgIG5hbWU6ICJSaWNoIFRleHQiCiAgICAgIH0sIHsKICAgICAgICBpZDogMiwKICAgICAgICBuYW1lOiAiTGF0ZXgiCiAgICAgIH1dLAogICAgICBpbnB1dF90eXBlOiAnJywKICAgICAgcHJvYmxlbV9odG1sOiAnJywKICAgICAgdGVzdDogJycKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB3aW5kb3cua2F0ZXggPSBrYXRleDsKICAgIHZhciB0YWcgPSBheGlvcy5nZXQoImh0dHA6Ly9sb2NhbGhvc3Q6OTg5OC90b3BpY3MvdjEvdG9waWNzL2dldFRvcGljcyIpOwogICAgdGFnLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIHJldHVybiBfdGhpcy50YWdzID0gcmVzcG9uc2UuZGF0YTsKICAgIH0pOwogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoe30sIG1hcFN0YXRlKHsKICAgIHByb2JsZW06IGZ1bmN0aW9uIHByb2JsZW0oc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnN1Ym1pdC5mb3JtLnByb2JsZW07CiAgICB9LAogICAgY3VzdG9tVG9vbGJhcjogZnVuY3Rpb24gY3VzdG9tVG9vbGJhcihzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuc3VibWl0LmVkaXRvcjsKICAgIH0KICB9KSwgewogICAgdmFsaWRhdEltZzogZnVuY3Rpb24gdmFsaWRhdEltZygpIHsKICAgICAgcmV0dXJuIEJvb2xlYW4odGhpcy5wcm9ibGVtLmltYWdlKSA9PSB0cnVlID8gdHJ1ZSA6IG51bGw7CiAgICB9CiAgfSksCiAgbWV0aG9kczogewogICAgY291bnREb3duQ2hhbmdlZDogZnVuY3Rpb24gY291bnREb3duQ2hhbmdlZChkaXNtaXNzQ291bnREb3duKSB7CiAgICAgIHRoaXMuZGlzbWlzc0NvdW50RG93biA9IGRpc21pc3NDb3VudERvd247CiAgICB9LAogICAgc2hvd0FsZXJ0Qm9keTogZnVuY3Rpb24gc2hvd0FsZXJ0Qm9keSgpIHsKICAgICAgdGhpcy5kaXNtaXNzQ291bnREb3duQm9keSA9IHRoaXMuZGlzbWlzc1NlY3M7CiAgICB9LAogICAgc2hvd0FsZXJ0VGFnczogZnVuY3Rpb24gc2hvd0FsZXJ0VGFncygpIHsKICAgICAgdGhpcy5kaXNtaXNzQ291bnREb3duVGFncyA9IHRoaXMuZGlzbWlzc1NlY3M7CiAgICB9LAogICAgc2hvd0FsZXJ0VGl0bGU6IGZ1bmN0aW9uIHNob3dBbGVydFRpdGxlKCkgewogICAgICB0aGlzLmRpc21pc3NDb3VudERvd25UaXRsZSA9IHRoaXMuZGlzbWlzc1NlY3M7CiAgICB9LAogICAgZ29OZXh0OiBmdW5jdGlvbiBnb05leHQoKSB7CiAgICAgIHZhciB2YWxUaXRsZSA9IHRoaXMucHJvYmxlbS50aXRsZS5sZW5ndGggPiAwID8gdHJ1ZSA6IGZhbHNlOwogICAgICB2YXIgdmFsQm9keSA9IHRoaXMucHJvYmxlbS5ib2R5Lmxlbmd0aCA+IDAgPyB0cnVlIDogZmFsc2U7CiAgICAgIHZhciB2YWxUYWdzID0gdGhpcy5wcm9ibGVtLnRvcGljc19pZC5sZW5ndGggPiAwID8gdHJ1ZSA6IGZhbHNlOwoKICAgICAgaWYgKHZhbEJvZHkgJiYgdmFsVGl0bGUgJiYgdmFsVGFncykgewogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgndXBkYXRlVmlld05leHQnKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAoIXZhbFRhZ3MpIHRoaXMuc2hvd0FsZXJ0VGFncygpOwogICAgICAgIGlmICghdmFsQm9keSkgdGhpcy5zaG93QWxlcnRCb2R5KCk7CiAgICAgICAgaWYgKCF2YWxUaXRsZSkgdGhpcy5zaG93QWxlcnRUaXRsZSgpOwogICAgICB9CiAgICB9LAogICAgb25SZXNldDogZnVuY3Rpb24gb25SZXNldChldnQpIHsKICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7CiAgICAgIHRoaXMucHJvYmxlbS50aXRsZSA9ICcnOwogICAgICB0aGlzLnByb2JsZW0uYm9keSA9ICcnOwogICAgICB0aGlzLnByb2JsZW0uaW1hZ2UgPSBudWxsOwogICAgICB0aGlzLnByb2JsZW0udG9waWNzX2lkID0gW107CiAgICB9LAogICAgdXBsb2FkSW1hZ2U6IGZ1bmN0aW9uIHVwbG9hZEltYWdlKGV2dCkgewogICAgICBldnQucHJldmVudERlZmF1bHQoKTsKICAgIH0sCiAgICB2aXN1YWxpemU6IGZ1bmN0aW9uIHZpc3VhbGl6ZSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgcHJvYiA9IGF4aW9zLnBvc3QoJ2h0dHA6Ly8nICsgdGhpcy4kc3RvcmUuc3RhdGUuY2xpZW50VVJMICsgJy9wcm9ibGVtL3YxL3Byb2JsZW0vbGF0ZXhUb0h0bWxieUJvZHknLCB7CiAgICAgICAgYm9keTogdGhpcy5wcm9ibGVtLmJvZHkKICAgICAgfSk7CiAgICAgIHByb2IudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICByZXR1cm4gX3RoaXMyLnRlc3QgPSByZXNwb25zZS5kYXRhOwogICAgICB9KTsKICAgICAgdmFyIGdlbmVyYXRvciA9IG5ldyBIdG1sR2VuZXJhdG9yKHsKICAgICAgICBoeXBoZW5hdGU6IGZhbHNlCiAgICAgIH0pOwogICAgICB2YXIgZG9jID0gcGFyc2UodGhpcy5wcm9ibGVtLmJvZHksIHsKICAgICAgICBnZW5lcmF0b3I6IGdlbmVyYXRvcgogICAgICB9KTsKICAgICAgdGhpcy5wcm9ibGVtX2h0bWwgPSBkb2MuaHRtbERvY3VtZW50KCkuZG9jdW1lbnRFbGVtZW50Lm91dGVySFRNTDsKICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgIE11bHRpc2VsZWN0OiBNdWx0aXNlbGVjdCAvL1RleFZpenVhbGl6ZXIKCiAgfSwKICB2YWxpZGF0aW9uczogewogICAgcHJvYmxlbTogewogICAgICB0aXRsZTogewogICAgICAgIHJlcXVpcmVkOiByZXF1aXJlZCwKICAgICAgICBtaW5MZW5ndGg6IG1pbkxlbmd0aCgxKQogICAgICB9LAogICAgICBib2R5OiB7CiAgICAgICAgcmVxdWlyZWQ6IHJlcXVpcmVkCiAgICAgIH0sCiAgICAgIHRvcGljc19pZDogewogICAgICAgIHJlcXVpcmVkOiByZXF1aXJlZAogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Problem.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"container md-6 align-center mt-2\">\n        <b-card-group deck>\n        <b-card>\n            <b-container >\n                <h1>Submit a Problem!</h1>\n                     <font color=\"red\"> <small>Required *</small> </font> \n                        <b-form @reset=\"onReset\">\n                            <b-form-group id=\"input-group-2\" label=\"Problem Title: *\">\n                                <b-form-input\n                                        id=\"input-1\"\n                                        v-model=\"$v.problem.title.$model\"\n                                        type=\"text\"\n                                        :state= \"$v.problem.title.$dirty ? !$v.problem.title.$error : null\"\n                                        required\n                                        placeholder=\"Please enter your problem title here\"\n                                        aria-describedby=\"input-1-live-feedback\"\n                                ></b-form-input>\n                                <b-form-invalid-feedback id=\"input-1-live-feedback\">\n                                    You must need to have a problem title.\n                                </b-form-invalid-feedback>\n                                <b-alert \n                                        :show=\"dismissCountDownTitle\" \n                                        dismissible \n                                        variant=\"danger\"  \n                                        @dismissed=\"dismissCountDownTitle=0\"\n                                        @dismiss-count-down=\"countDownChanged\" \n                                        >\n                                        You need to enter a title.\n                                </b-alert>\n                            </b-form-group>\n                                                            \n                            <b-form-group label=\"Problem Body: *\">\n                                <b-form-textarea\n                                id=\"textarea\"\n                                v-model=\"$v.problem.body.$model\"\n                                :state= \"$v.problem.body.$dirty ? !$v.problem.body.$error : null\"\n                                required\n                                placeholder=\"Please enter your problem body here in latex...\"\n                                rows=\"6\"\n                                max-rows=\"12\"\n                                ></b-form-textarea>\n                            <b-form-invalid-feedback id=\"input-2-live-feedback\">\n                                    You must need to enter a problem body.\n                            </b-form-invalid-feedback>\n                            <b-alert \n                                        :show=\"dismissCountDownBody\" \n                                        dismissible \n                                        variant=\"danger\"  \n                                        @dismissed=\"dismissCountDownBody=0\"\n                                        @dismiss-count-down=\"countDownChanged\" \n                                        >\n                                        You must need to have a problem body.\n                                </b-alert>\n                            </b-form-group>\n                           \n                            <b-form-group label=\"Tags: *\">\n                                <multiselect\n                                        v-model=\"$v.problem.topics_id.$model\"\n                                        :state= \"$v.problem.topics_id.$dirty ? !$v.problem.topics_id.$error : null\"\n                                        placeholder=\"Search a tag\"\n                                        label=\"name\"\n                                        track-by=\"id\"\n                                        :options=\"tags\"\n                                        :multiple=\"true\"\n                                        :hide-selected=\"true\"\n                                >\n                                </multiselect>\n                                <b-form-invalid-feedback id=\"input-3-live-feedback\">\n                                        You must need to select at lest one tag.\n                                </b-form-invalid-feedback>\n                                <b-alert \n                                        :show=\"dismissCountDownTags\" \n                                        dismissible \n                                        variant=\"danger\"  \n                                        @dismissed=\"dismissCountDownTags=0\"\n                                        @dismiss-count-down=\"countDownChanged\" \n                                        >\n                                        You need to select at least one tag.\n                                </b-alert>\n                            </b-form-group>\n                            <!-- Inser a image -->\n                            <!-- \n                             <b-form-group id = \"input-group-img\" label=\"Select an image: \">\n                                <b-form-file\n                                        v-model=\"problem.image\"\n                                        :state=\"validatImg\"\n                                        placeholder=\"Choose an image (.jpeg, .png, .gif) or drop it here...\"\n                                        drop-placeholder=\"Drop image here...\"\n                                        accept=\"image/jpeg, image/png, image/gif\"\n                                ></b-form-file>\n                            </b-form-group>\n                            -->\n                            <b-button type=\"reset\" variant=\"light\"><i class=\"fas fa-trash fa-1x\" style=\"color:  #e31d1d;\"></i></b-button>\n                            <b-button variant=\"light\" class=\"mx-1 float-right \" @click=\"goNext\"><i class=\"fas fa-angle-double-right fa-1x\" style=\"color:  #2f3135 ;\"></i></b-button>\n                            <b-button variant=\"light\" class=\"mx-1 float-right \" @click=\"visualize\"><i class=\"fas fa-play-circle\"></i></b-button>\n                        </b-form>\n\n                      \n            </b-container>\n        </b-card>\n            <b-card>\n                <h1>Preview</h1>\n                <h3> {{problem.title}} </h3>\n               \n\n                <b-card-body v-html=\"problem_html\">\n                </b-card-body>\n                \n                <!--\n                <b-card-body v-html=\"problem_html\">\n                </b-card-body>\n                -->\n                \n            </b-card>\n        </b-card-group>\n\n        \n    </div>\n</template>\n<script>\n    //import TexVizualizer from \"../components/TexVizualizer\";\n    import { mapState } from 'vuex'\n    import Multiselect from \"vue-multiselect\"\n    import axios from \"axios\"\n    import { validationMixin } from 'vuelidate'\n    import { minLength, required } from 'vuelidate/lib/validators'\n    import { parse, HtmlGenerator } from 'latex.js'\n    import katex from 'katex';\n    import 'katex/dist/katex.min.css';\n    export default {\n        mixins: [validationMixin],\n        data() {\n            return {\n                dismissSecs: 5,\n                dismissCountDownBody: 0,\n                dismissCountDownTags: 0,\n                dismissCountDownTitle: 0,\n                tags: [],\n                input_types: [\n                    {id: 1, name: \"Rich Text\"},\n                    {id: 2, name: \"Latex\"}\n                ],\n                input_type: '',\n                problem_html: '',\n                test: ''\n            }\n        },\n        mounted() {\n            window.katex = katex;\n            const tag = axios.get(\"http://localhost:9898/topics/v1/topics/getTopics\");\n            tag.then(response => (this.tags = response.data));\n        },\n        computed: {\n            ...mapState ({\n                problem: state => state.submit.form.problem,\n                customToolbar: state => state.submit.editor\n            }),\n            validatImg() {\n                return (Boolean(this.problem.image)==true? true: null)\n            },\n        },\n        methods: {\n            countDownChanged(dismissCountDown) {\n                this.dismissCountDown = dismissCountDown\n            },\n            showAlertBody() {\n                this.dismissCountDownBody = this.dismissSecs\n            },\n            showAlertTags() {\n                this.dismissCountDownTags = this.dismissSecs\n            },\n            showAlertTitle() {\n                this.dismissCountDownTitle = this.dismissSecs\n            },\n            goNext() {\n                let valTitle = this.problem.title.length > 0 ? true : false;\n                let valBody = this.problem.body.length > 0 ? true : false;\n                let valTags = this.problem.topics_id.length > 0 ? true: false;\n                if (valBody && valTitle && valTags){\n                    this.$store.commit('updateViewNext')\n                }else{\n                    if (!valTags)\n                        this.showAlertTags();\n                    if (!valBody) \n                        this.showAlertBody();\n                    if (!valTitle)\n                        this.showAlertTitle();\n                }\n            },\n            onReset (evt) {\n                evt.preventDefault();\n                this.problem.title = '';\n                this.problem.body = '';\n                this.problem.image = null;\n                this.problem.topics_id = []\n            },\n            uploadImage (evt) {\n                evt.preventDefault();\n            },\n            visualize(){\n                \n               const prob = axios.post('http://' + this.$store.state.clientURL +'/problem/v1/problem/latexToHtmlbyBody',{\n                    body: this.problem.body\n                });\n                prob.then(response => (this.test = response.data));\n                \n                let generator = new HtmlGenerator({ hyphenate: false })\n                let doc = parse(this.problem.body, { generator: generator })\n                this.problem_html = doc.htmlDocument().documentElement.outerHTML\n                \n            }\n\n        },\n        components: {\n            Multiselect,\n            //TexVizualizer\n        },\n        validations: {\n            problem: {\n                title: {\n                    required,\n                    minLength: minLength(1)\n                },\n                body: {\n                    required\n                },\n                topics_id: {\n                    required\n                }\n            }\n        }\n    }\n</script>\n<style src=\"../static/css/vue-multiselect/vue-multiselect.min.css\"></style>\n\n"],"sourceRoot":"src/components"}]}