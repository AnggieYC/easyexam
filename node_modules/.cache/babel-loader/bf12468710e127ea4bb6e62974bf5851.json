{"remainingRequest":"/home/anggie/easy-exam-grupo-ii/Implementation/frontend/easyexam/node_modules/babel-loader/lib/index.js!/home/anggie/easy-exam-grupo-ii/Implementation/frontend/easyexam/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/anggie/easy-exam-grupo-ii/Implementation/frontend/easyexam/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anggie/easy-exam-grupo-ii/Implementation/frontend/easyexam/src/views/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/anggie/easy-exam-grupo-ii/Implementation/frontend/easyexam/src/views/Dashboard.vue","mtime":1574877352821},{"path":"/home/anggie/easy-exam-grupo-ii/Implementation/frontend/easyexam/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anggie/easy-exam-grupo-ii/Implementation/frontend/easyexam/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/anggie/easy-exam-grupo-ii/Implementation/frontend/easyexam/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anggie/easy-exam-grupo-ii/Implementation/frontend/easyexam/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\n    <div>\n\n        <!-- START MODAL FOR PROBLEM -->\n\n        <b-modal v-if=\"available\" ref=\"modal-problem\" size=\"lg\" >\n            <template v-slot:modal-title>\n                <b>{{modal_titleProblem}}</b>\n            </template>\n            <b-container>\n                <b-row>\n                    <b-col><b-card-sub-title><small><strong>Tags: </strong></small><small v-for=\"(tag, index) of modal_tagsProblem\" v-bind:key=\"index\"> | {{tag}}</small></b-card-sub-title></b-col>\n                    <b-col><b-card-sub-title><small class=\"float-right\"><strong>Type: </strong>{{types[modal_selectProblem ['type']]}}</small></b-card-sub-title></b-col>\n                </b-row>\n            </b-container>  \n            <b-card-body v-html=\"modal_desProblem\"></b-card-body>\n            <b-row>\n                <b-col cols=\"6\" sm=\"8\"><b-card header=\"Comments\">\n                    <b-card v-for=\"(com, key) of commentsInfo\" v-bind:key =\"key\">\n                        <b-card-sub-title>{{com.nameTeacher}}</b-card-sub-title>\n                        <b-card-text>{{com.description}}</b-card-text>\n                    </b-card>\n                </b-card></b-col>\n                <b-col cols=\"6\" sm=\"4\">\n                    <b-container class=\"float-right border border-light\">\n                        <div class=\"text-center\">Score<br><b-button disabled class=\"pull-right\">{{modal_selectProblem ['score']}}</b-button></div>\n                        <br>\n                        <div class=\"text-center\"><strong>{{modal_selectProblem['qualifiers']}} </strong>qualifiers</div>\n                        <center>\n                        <b-button-group v-if=\"tempscore > 0\">\n                            <b-button size=\"sm\" v-for=\"(btn, idx) in stars\"\n                                :key=\"idx\"\n                                :pressed.sync = \"btn.state\"\n                                variant = \"outline-dark\"\n                                @click=\"updateScore (idx + 1)\"\n                                pill\n                                v-b-popover.hover.top=\"'You can change the rating until you press Done'\"\n                            >\n                            <mdb-icon icon=\"star\" />\n                            </b-button>\n                        </b-button-group>\n                        <b-button-group v-else-if=\"ifscore <= 0\">\n                            <b-button size=\"sm\" v-for=\"(btn, idx) in stars\"\n                                :key=\"idx\"\n                                :pressed.sync = \"btn.state\"\n                                variant = \"outline-dark\"\n                                @mouseover= \"upstars (idx)\"\n                                @mouseleave=\"downstars\"\n                                @click=\"updateScore (idx + 1)\"\n                                pill\n                                v-b-popover.hover.top=\"'You can change the rating until you press Done'\"\n                            >\n                            <mdb-icon icon=\"star\" />\n                            </b-button>\n                        </b-button-group>\n                        <b-button-group v-else>\n                            <b-button size=\"sm\" v-for=\"n in ifscore\"\n                                :key=\"n\"\n                                pressed\n                                variant = \"outline-dark\"\n                                pill\n                            >\n                            <mdb-icon icon=\"star\" />\n                            </b-button>\n                            <b-button size=\"sm\" v-for=\"n in (5 - ifscore)\"\n                                :key=\"n + ifscore\"\n                                disabled\n                                variant = \"outline-dark\"\n                                pill\n                            >\n                            <mdb-icon icon=\"star\" />\n                            </b-button>\n                        </b-button-group>\n                        </center>\n                    </b-container>                  \n                </b-col>\n            </b-row>\n            <template v-slot:modal-footer>\n                <b-row v-if=\"!isReport\" style=\"width : 100%\">\n                    <b-col cols = \"3\">\n                        <center>\n                            <b-button @click=\"showSol()\">\n                                <b>See Solution</b>\n                            </b-button>\n                        </center>\n                    </b-col>\n                    <b-col cols = \"3\">\n                    <center>\n                        <b-button variant=\"outline-info\" @click=\"showComment()\"><b>Comment</b></b-button>\n                    </center>\n                    </b-col>\n                    <b-col cols = \"3\">\n                        <center>\n                            <b-button variant=\"outline-danger\" @click=\"reportProblem()\">\n                                <b>Report</b>\n                            </b-button>\n                        </center>\n                    </b-col>\n                    <b-col cols = \"3\">\n                    <center>\n                        <b-button variant=\"outline-danger\" @click=\"cancel()\"><b>Done</b></b-button>\n                    </center>\n                    </b-col>\n                </b-row>\n                <b-row v-else style=\"width : 100%\">\n                    <b-col cols = \"4\">\n                        <center>\n                            <b-button @click=\"showSol()\">\n                                <b>See Solution</b>\n                            </b-button>\n                        </center>\n                    </b-col>\n                    <b-col cols = \"4\">\n                    <center>\n                        <b-button variant=\"outline-info\" @click=\"showComment()\"><b>Comment</b></b-button>\n                    </center>\n                    </b-col>\n                    <b-col cols = \"4\">\n                    <center>\n                        <b-button variant=\"outline-danger\" @click=\"cancel()\"><b>Done</b></b-button>\n                    </center>\n                    </b-col>\n                </b-row>\n            </template>\n        </b-modal>\n\n        <!-- MODAL IF YOU DONT HAVE -->\n\n        <b-modal v-else ref=\"modal-problem\" size=\"lg\">\n            <template v-slot:modal-title>\n                <b>{{modal_titleProblem}}</b>\n            </template>\n            <b-container>\n                <b-row>\n                    <b-col><b-card-sub-title><small><strong>Tags: </strong></small><small v-for=\"(tag, index) of modal_tagsProblem\" v-bind:key=\"index\"> | {{tag}}</small></b-card-sub-title></b-col>\n                    <b-col><b-card-sub-title><small class=\"float-right\"><strong>Type: </strong>{{types[modal_selectProblem ['type']]}}</small></b-card-sub-title></b-col>\n                </b-row>\n            </b-container>  \n            <b-card-body v-html=\"modal_desProblem\"></b-card-body>\n            <b-row>\n                <b-col cols=\"6\" sm=\"8\"><b-card header=\"Comments\">\n                    <b-card v-for=\"(com, key) of commentsInfo\" v-bind:key =\"key\">\n                        <b-card-sub-title>{{com.nameTeacher}}</b-card-sub-title>\n                        <b-card-text>{{com.description}}</b-card-text>\n                    </b-card>\n                </b-card></b-col>\n                <b-col cols=\"6\" sm=\"4\">\n                    <b-container class=\"float-right border border-light\">\n                        <div class=\"text-center\">Score<br><b-button disabled class=\"pull-right\">{{modal_selectProblem ['score']}}</b-button></div>\n                        <br>\n                        <div class=\"text-center\"><strong>{{modal_selectProblem['qualifiers']}} </strong>qualifiers</div>\n                    </b-container>                  \n                </b-col>\n            </b-row>\n            <template v-slot:modal-footer>\n                <b-row style=\"width : 100%\">\n                    <b-col cols = \"6\">\n                    <center>\n                        <b-button @click=\"hideModalProblem\"><b>Get Problem</b></b-button>\n                    </center>\n                    </b-col>\n                    <b-col cols = \"6\">\n                    <center>\n                        <b-button variant=\"outline-danger\" @click=\"cancel()\"><b>Cancel</b></b-button>\n                    </center>\n                    </b-col>\n                </b-row>\n            </template>\n        </b-modal>\n\n        <!-- END MODAL FOR PROBLEM-->\n        <!-- START MODAL FOR COMMENTS -->\n\n        <b-modal ref=\"ModalComment\" title=\"New Comment\" hide-footer>\n            <b-form @submit=\"onSubmit\" @reset=\"onReset\" >\n                <b-form-group\n                    id=\"input-group-1\"\n                    label=\"Write your new comment:\"\n                    label-for=\"input-1\"\n                >\n                    <b-form-textarea\n                    id=\"textarea-state\"\n                    v-model=\"newcomment\"\n                    :state=\"newcomment.length <= 500\"\n                    placeholder=\"Enter a maximun of 500 characters\"\n                    rows=\"5\"\n                    ></b-form-textarea>\n\n                </b-form-group>\n                    <b-button type=\"submit\" variant=\"primary\">Submit</b-button>\n                    <!--b-button type=\"reset\" variant=\"danger\">Reset</b-button-->\n            </b-form>\n        </b-modal>\n\n        <!--END MODAL FOR COMMENTS -->\n\n        <!-- START MODAL FOR REPORT -->\n\n        <b-modal ref=\"ModalReport\" title=\"Report\" hide-footer>\n            <b-form @submit=\"reportSubmit\">\n                <b-form-group\n                    id=\"input-group-1\"\n                    label=\"Write a comment:\"\n                    label-for=\"input-1\"\n                >\n                    <b-form-textarea\n                    id=\"textarea-state\"\n                    v-model=\"reportcomment\"\n                    :state=\"reportcomment.length <= 500\"\n                    placeholder=\"Enter a maximun of 500 characters\"\n                    rows=\"5\"\n                    ></b-form-textarea>\n\n                </b-form-group>\n                    <b-button type=\"submit\" variant=\"danger\">Submit</b-button>\n                    <!--b-button type=\"reset\" variant=\"danger\">Reset</b-button-->\n            </b-form>\n        </b-modal>\n\n        <!-- END MODAL FOR REPORT -->\n\n        <!-- START MODAL FOR SOLUTION-->\n\n        <b-modal ref=\"ModalSol\" title=\"Solution \" hide-footer>\n            <div v-html=\"solutionshow\">\n\n            </div>\n        </b-modal>\n\n        <!-- END MODAL FOR SOLUTION -->\n\n        <!--ALERT FOR A PROBLEM YOU HAVE -->\n\n        <b-alert\n        variant=\"warning\"\n        :show = showDismissibleAlert\n        dismissible\n        fade\n        @dismissed=\"showDismissibleAlert=false\"\n        >\n        <b>You have this problem</b>\n        </b-alert>\n\n        <!--SEARCH ENGINE -->\n        <b-row v-if=\"$store.state.isLogged == true\" class=\"justify-content-center\">\n            <b-col cols = \"3\" class=\"bg-light\" >\n                <div role=\"tablist\">\n                    <b-card no-body style=\"margin-top: 25px; border-color: white\">\n                        <b-card-header header-tag=\"header\" class=\"p-1 bg-secondary\" role=\"tab\" align=\"center\">\n                            <h6 style=\"color: white\">Credits</h6>\n                        </b-card-header>\n                        <b-card-body>\n                            <h1 align=\"center\" style=\"color: #2f3135\"> <b>{{creditos}}</b> </h1>\n                        </b-card-body>\n                    </b-card>\n\n                    <b-card no-body style=\"margin-top: 0px; border-color: white; padding: 0\">\n                        <b-card-header header-tag=\"header\" class=\"p-1 bg-secondary\" role=\"tab\" align=\"center\">\n                            <h6 style=\"color: white\">Subjects</h6>\n                        </b-card-header>\n                            <b-card-body style=\"height: auto; max-height: 300px; position:relative\">\n                                <b-list-group>\n                                    <b-list-group-item v-for=\"(sub, index) of getSubjects\" v-bind:key=\"index\" style=\"padding:0px\" >\n                                        <b-button :pressed.sync=sub.state v-if=\"sub.state== true\" @click=\"selectSubject(sub.name)\" variant=\"light\" style=\"border:0px; width:100%; heigth: 100%\">\n                                        {{sub.name}}\n                                        </b-button>\n                                        <b-button :pressed.sync=sub.state v-else @click=\"selectSubject(sub.name)\" variant=\"light\" style=\"border:0px; width:100%; heigth: 100%\" align-h=\"between\">\n\n                                        <b-row align-h=\"between\">\n                                            <b-col cols=\"9\">{{sub.name}}</b-col>\n                                            <b-col cols=\"3\"><b-badge variant=\"dark\" pill>X</b-badge></b-col>\n                                        </b-row>\n                                        </b-button>\n                                    </b-list-group-item>\n                                </b-list-group>\n                            </b-card-body>\n                    </b-card>\n\n                    <b-card no-body style=\"margin-top: 5px; border-color: white\">\n                        <b-card-header header-tag=\"header\" class=\"p-1 bg-secondary\" role=\"tab\" align=\"center\" >\n                            <h6 style=\"color: white\">Problem Type</h6>\n                        </b-card-header>\n                            <b-card-body align=\"center\" >\n                            <b-list-group>\n                            <!--<b-list-group-item v-for=\"(ty, index) of types\" v-bind:key = \"index\" href=\"#\" @click=\"selectType (index)\" style=\"color: black\">{{ty}}</b-list-group-item>-->\n\n                                <b-list-group-item v-for=\"(ty, index) of getTypes\" v-bind:key=\"index\" style=\"padding:0px\" >\n                                    <b-button :pressed.sync=ty.state v-if=\"ty.state== true\" @click=\"selectType(ty.name)\" variant=\"light\" style=\"border:0px; width:100%; heigth: 100%\">\n                                        {{ty.name}}\n                                    </b-button>\n                                    <b-button :pressed.sync=ty.state v-else @click=\"selectType(ty.name)\" variant=\"light\" style=\"border:0px; width:100%; heigth: 100%\" align-h=\"between\">\n                                        <b-row align-h=\"between\">\n                                            <b-col cols=\"9\">{{ty.name}}</b-col>\n                                            <b-col cols=\"3\"><b-badge variant=\"dark\" pill>X</b-badge></b-col>\n                                        </b-row>\n                                    </b-button>\n                                </b-list-group-item>\n\n                            </b-list-group>\n                            </b-card-body>\n                    </b-card>\n                </div>\n            </b-col>\n\n            <b-col cols = \"9\" style=\"margin-top: 20px\" >\n\n                <b-card style=\"width:90%\" header-tag=\"header\" >\n                    <template v-slot:header>\n                        <b-row align-h=\"between\" style=\"margin:auto\">\n                            <b-col cols=\"12\" lg=\"8\" class=\"p-0\">\n                                <b-form-input class=\"w-100\" type=\"text\" v-model=\"keyToSearch\"></b-form-input>\n                            </b-col>\n                            <b-col cols=\"12\" lg=\"2\" class=\"p-0\">\n                                <b-form-select class=\"w-100\"\n                                id=\"input-3\"\n                                v-model=\"form_select.tsort\"\n                                :options=\"form_select.sorts\"\n                                required\n                                ></b-form-select>\n                            </b-col>\n                            <b-col cols=\"12\" lg=\"2\" class=\"p-0\">\n                                <b-button class=\"w-100\" squared variant=\"outline-secondary\">Search</b-button>\n                            </b-col>\n                        </b-row>\n                    </template>\n\n                    <b-container> \n                        <!--Card for problems-->\n                        <b-card class=\"mt-2 shadow-sm\" v-for=\"(problem, index) of filtrar\" v-bind:key = \"index\" >\n                            <b-button disabled size=\"sm\" variant=\"light\" class=\"float-right\"><small><strong>Score</strong></small><br><small class=\"pull-right\">{{problem.score}}</small></b-button>\n                            <b-card-title>{{problem.title}}</b-card-title>\n                            <b-card-sub-title><small><strong>Tags: </strong></small><small v-for=\"(tag, index) of problem.topicsString\" v-bind:key=\"index\"> | {{tag}}</small></b-card-sub-title>\n                            <b-button squared v-if=\"creditos > 0\" size=\"sm\" variant=\"light\" class=\"mt-2 float-md-left\" @click=\"showModalProblem (problem.idx)\">Select</b-button>\n                            <b-card-text><small class=\"float-right\">{{dicty[problem.type]}}</small></b-card-text>\n                        </b-card>\n                    </b-container>\n                </b-card>\n            </b-col>\n        </b-row>\n\n    </div>\n\n</template>\n\n\n\n<script>\n//import json from './information.json'\nimport axios from 'axios'\nimport {mapState} from 'vuex'\nimport { mdbIcon } from 'mdbvue';\nimport { parse, HtmlGenerator } from 'latex.js'\nimport katex from 'katex';\nimport 'katex/dist/katex.min.css';\n\n\nexport default {\n    components : {\n        mdbIcon\n    },\n    data :  () => ({\n            dicty : {'SA' : 'Short Answer', 'LA' : 'Long Answer', 'MC' : 'Multiple Choice' , 'TF' : 'True or False'},\n            solutionshow :  [],\n            showDismissibleAlert: false,\n            form_select : {\n                tsort : null,\n                sorts : [{ text: 'Order by', value: null }, 'Title', 'Score', 'qualifiers'],\n            },\n            stars : [\n                {state : false},\n                {state : false},\n                {state : false},\n                {state : false},\n                {state : false}\n            ],\n            newcomment : '',\n            actualUser : 'GiordanoLover777',\n            filtrarAvailable : true,\n            available : true,\n            subjectToSearch : '',\n            keyToSearch : '',\n            results : [],\n            totalproblems : [],\n            infoproblems : [],\n            modal_titleProblem : '',\n            modal_desProblem : '',\n            modal_tagsProblem : [],\n            modal_selectProblem : {},\n            modal_solution : '',\n            selectedSubjects : [],\n            ifscore : -1,\n            mp : [],\n            selected : [],\n            subjects : [{'name' : 'Divide and conquer', 'state' : true}, \n                        {'name' : 'Algorithms', 'state' : true},\n                        {'name' : 'Maths', 'state' :true}],\n            types : {'SA' : 'Short Answer', 'LA' : 'Long Answer', 'MC' : 'Multiple Choice', 'TF': 'True or False'},\n            selectedTypes:[],\n            typeSelected:'',\n            commentsInfo : [],\n            idsProblems : [],\n            problem_html: '',\n            reportcomment : '',\n            tempscore : -1,\n            isReport : false,\n    }),\n\n    methods: {\n\n        checkIfCheck () {\n            axios.get(\"http://\" + this.$store.state.clientURL + \"/problem/v1/problem/getProblemsScore?idProblem=\"+\n            this.modal_selectProblem.id + \"&idTeacher=\"+ this.$store.state.user.id)\n            .then (response => this.ifscore = response.data)\n\n        },\n        checkIsReported () {\n            axios.get ('http://' + this.$store.state.clientURL + '/suggest/v1/isReported?idProblem=' + this.modal_selectProblem.id\n            + '&idTeacher=' + this.$store.state.user.id)\n            .then (response => {\n                this.isReport = response.data\n            })\n        },\n\n        updateScore (val) {\n            \n            if (this.ifscore <= 0)\n            {\n                this.downstars ()\n                this.upstars (val)\n                this.tempscore = val\n                /*let new_score = this.modal_selectProblem['score']\n                new_score = new_score * this.modal_selectProblem ['qualifiers']\n                new_score = new_score + val\n                new_score = new_score/(this.modal_selectProblem ['qualifiers'] + 1)\n                new_score = Math.round (new_score * 10) / 10\n                this.modal_selectProblem['qualifiers']++\n                this.modal_selectProblem ['score'] = new_score\n                axios.post(\"http://\" + this.$store.state.clientURL + \"/problem/v1/problem/saveTeacherScore\",\n                 {id : this.modal_selectProblem.id, idTeacher : this.$store.state.user.id , scoreInteger : val} )\n                axios.post(\"http://\" + this.$store.state.clientURL + \"/problem/v1/updateProblemRatio?idProblem=\" + this.modal_selectProblem.id +\n                \"&rate=\" + val)\n                this.ifscore = val*/\n            }\n        },\n\n        upstars (idx) {\n            for (let i = 0; i < idx; i++){\n                this.stars[i].state = true\n            }\n        },\n\n        downstars () {\n            for (let i = 0; i < 5; i++){\n                this.stars[i].state = false\n            }\n        },\n\n        showComment (){\n            this.$refs['ModalComment'].show()\n        },\n\n        reportProblem (){\n            this.$refs['ModalReport'].show()\n        },\n\n\n        showSol () {\n\n            let generator = new HtmlGenerator({ hyphenate: false })\n            let doc = parse(this.solutionshow, { generator: generator })\n            this.solutionshow = doc.htmlDocument().documentElement.outerHTML;\n            this.$refs['ModalSol'].show()\n        },\n        onSubmit(evt) {\n            evt.preventDefault()\n            let co = {'idTeacher' : this.$store.state.user.id,  'nameTeacher' : this.$store.state.user.username, 'description' : this.newcomment, 'idProblem' : this.modal_selectProblem.id}\n            this.commentsInfo.push(co)\n            axios.post ('http://' + this.$store.state.clientURL + '/comment/v1/submitComment', co)\n            this.$refs['ModalComment'].hide()\n\n            this.newcomment = ''\n        },\n        onReset(evt) {\n            evt.preventDefault()\n            \n            this.$refs['ModalComment'].hide()\n        },\n\n        reportSubmit (evt){\n            evt.preventDefault()\n            axios.post ('http://' + this.$store.state.clientURL + '/suggest/v1/reportProblem?comment=' + this.reportcomment + '&idProblem=' + \n            this.modal_selectProblem.id + '&idTeacher=' + this.$store.state.user.id)\n            this.$refs['ModalReport'].hide()\n            this.reportcomment = ''\n            this.isReport = true\n        },\n\n\n        imprimir : function() {\n            for (let problem of this.infoproblems){\n                let stringToSearch = problem.topicsString.toString().concat (\" \", problem.body, \" \", problem.title).toLowerCase()\n                console.log (stringToSearch)\n            }\n        },\n\n        showModalProblem(index) {\n            this.modal_titleProblem = this.infoproblems [index].title\n            this.modal_desProblem = this.infoproblems [index].body\n            this.modal_tagsProblem = this.infoproblems [index].topicsString\n            this.modal_selectProblem = this.infoproblems [index]\n            this.solutionshow = ''\n            this.tempscore = -1\n            this.checkIsReported()\n\n            let generator = new HtmlGenerator({ hyphenate: false })\n            let doc = parse(this.infoproblems[index].body, { generator: generator })\n            this.modal_desProblem = doc.htmlDocument().documentElement.outerHTML;\n            \n            axios.get('http://' + this.$store.state.clientURL + '/problem/v1/problem/getSolutionProblem?idProblem=' + this.modal_selectProblem.id)\n            .then(response => (this.solutionshow = (response.data.body)))\n            this.modal_solution = this.infoproblems [index].body\n            this.checkIfCheck ()\n            \n            if (this.idsProblems.includes (this.modal_selectProblem.id)){\n                this.available = true\n                this.showDismissibleAlert = true\n                this.$refs['modal-problem'].show()\n                axios.get(\"http://\" + this.$store.state.clientURL + \"/comment/v1/comment/getCommentByProblem?idProb=\" + this.modal_selectProblem.id)\n                .then (response => (this.commentsInfo = (response.data)))\n                alert (\"You have already get this problem. Go to Generate to use it in a new exam!\")\n            }\n            else {\n                if (this.$store.state.user.credits == 0) alert(\"You have ran out of credits! Submit a problem to get some more!\");\n                this.available = false\n                this.$refs['modal-problem'].show()\n                axios.get(\"http://\" + this.$store.state.clientURL + \"/comment/v1/comment/getCommentByProblem?idProb=\" + this.modal_selectProblem.id)\n                .then (response => (this.commentsInfo = (response.data)))\n            }\n        },\n\n        hideModalProblem() {\n            this.$store.commit ({\n                type : 'updateNewProblem',\n                valor : this.modal_selectProblem\n            })\n            this.idsProblems.push (this.modal_selectProblem.id)\n\n            axios.post('http://' + this.$store.state.clientURL + '/problem/v1/problem/saveProblemsSelected', {\n                idTeacher : this.$store.state.user.id,\n                idProblem : this.modal_selectProblem.id\n            })\n            let new_credit = this.$store.state.user.credits - 1\n            this.$store.state.user.credits -= 1;\n            axios.post('http://' + this.$store.state.clientURL + '/teacher/v1/teacher/updateBonus',{\n                id : this.$store.state.user.id,\n                bonus : new_credit\n            })\n\n            this.available = true\n\n            alert (\"Now you can use this problem to generate an exam. Go to Generate to use it!\")\n\n            //this.$refs['modal-problem'].hide()\n        },\n\n        cancel () {\n            if (this.tempscore > 0){\n                let val = this.tempscore\n                let new_score = this.modal_selectProblem['score']\n                new_score = new_score * this.modal_selectProblem ['qualifiers']\n                new_score = new_score + val\n                new_score = new_score/(this.modal_selectProblem ['qualifiers'] + 1)\n                new_score = Math.round (new_score * 10) / 10\n                this.modal_selectProblem['qualifiers']++\n                this.modal_selectProblem ['score'] = new_score\n                axios.post(\"http://\" + this.$store.state.clientURL + \"/problem/v1/problem/saveTeacherScore\",\n                {id : this.modal_selectProblem.id, idTeacher : this.$store.state.user.id , scoreInteger : val} )\n                axios.post(\"http://\" + this.$store.state.clientURL + \"/problem/v1/updateProblemRatio?idProblem=\" + this.modal_selectProblem.id +\n                \"&rate=\" + val)\n                this.ifscore = val\n            }\n            this.tempscore = -1\n            this.isReport = false\n            this.$refs['modal-problem'].hide()\n        },\n\n        selectSubject (Subject) {\n            let intFind = this.selectedSubjects.indexOf(Subject.toLowerCase())\n            if (intFind >= 0){\n                this.selectedSubjects.splice(intFind, 1)\n            }\n            else{\n                this.selectedSubjects.push (Subject.toLowerCase())\n            }\n        },\n\n        selectType (Type) {\n            let intFind = this.selectedTypes.indexOf(Type)\n            if (intFind >= 0){\n                this.selectedTypes.splice(intFind, 1)\n            }\n            else{\n                this.selectedTypes.push (Type)\n            }\n\n        },\n\n    },\n\n    mounted () {\n        window.katex = katex;\n        axios.get('http://' + this.$store.state.clientURL + '/problem/v1/problem/getProblemsSelected?id=' + this.$store.state.user.id)\n        .then(response => {\n            this.mp = response.data\n            for (let m of response.data){\n                this.idsProblems.push(m.id)\n            }\n        }\n        )\n        axios.get('http://' + this.$store.state.clientURL + '/problem/v1/problem/getProblemsSubmitedByUser?idUser=' + this.$store.state.user.id)\n        .then(response => {\n            for (let m of response.data){\n                this.idsProblems.push(m.id)\n            }\n        }\n        )\n        axios.get(\"http://\" + this.$store.state.clientURL +  \"/problem/v1/problem/getProblemTopics\")\n        .then(response => (this.infoproblems = response.data))\n        /*axios.get (\"http://localhost:9900/comment/v1/comment/getCommentByProblem?idProb=1\")\n        .then(response => (this.commentsInfo = response.data))*/\n//        axios.get(\"http://\" + this.$store.state.clientURL + \"/problem/v1/problem/getProblemsSelected\")\n        \n    },\n\n    computed : {\n         ...mapState ({\n            problemsAll : state=>state.myProblems,\n            creditos : state=>state.user.credits\n            //idsProblems : state=>state.idsProblems\n        }),\n        filtrar : function () {\n            let res = []\n            if(this.infoproblems.length > 0){\n                let id = 0\n                for (let problem of this.infoproblems) {\n                    problem[\"idx\"] = id\n                    id = id + 1\n                    if (!this.idsProblems.includes(problem.id)) {\n                        if (this.selectedSubjects.length === 0) {\n                            if (this.keyToSearch === '') {\n                                if (this.selectedTypes.length===0)\n                                    res.push (problem)\n                                else{\n                                    let newproty='';\n                                    if (problem.type==='SA'){\n                                        newproty= 'Short Answer (SA)'\n                                    }\n                                    if (problem.type==='LA'){\n                                        newproty= 'Long Answer (LA)'\n                                    }\n                                    if (problem.type==='MC'){\n                                        newproty= 'Multiple Choice (MC)'\n                                    }\n                                    if (problem.type==='TF'){\n                                        newproty= 'True or False (TF)'\n                                    }\n                                    if (this.selectedTypes.includes (newproty)) {\n                                        res.push(problem)\n                                    }\n                                }\n                            }\n                            else {\n                                let stringToSearch = problem.topicsString.toString().concat (\" \", problem.body, \" \", problem.title).toLowerCase ()\n                                if (stringToSearch.includes (this.keyToSearch.toLowerCase())) {\n                                    if (this.selectedTypes.length===0)\n                                        res.push (problem)\n                                    else{\n                                        let newproty='';\n                                        if (problem.type==='SA'){\n                                            newproty= 'Short Answer (SA)'\n                                        }\n                                        if (problem.type==='LA'){\n                                            newproty= 'Long Answer (LA)'\n                                        }\n                                        if (problem.type==='MC'){\n                                            newproty= 'Multiple Choice (MC)'\n                                        }\n                                        if (problem.type==='TF'){\n                                            newproty= 'True or False (TF)'\n                                        }\n                                        if (this.selectedTypes.includes (newproty)) {\n                                            res.push(problem)\n                                        }\n                                    }\n                                }}}\n                        else {\n                            if (problem.topicsString.filter(value => this.selectedSubjects.includes (value.toLowerCase())).length) {\n                                if (this.keyToSearch === '') {\n                                    if (this.selectedTypes.length===0)\n                                        res.push (problem)\n                                    else{\n                                        let newproty='';\n                                        if (problem.type==='SA'){\n                                            newproty= 'Short Answer (SA)'\n                                        }\n                                        if (problem.type==='LA'){\n                                            newproty= 'Long Answer (LA)'\n                                        }\n                                        if (problem.type==='MC'){\n                                            newproty= 'Multiple Choice (MC)'\n                                        }\n                                        if (problem.type==='TF'){\n                                            newproty= 'True or False (TF)'\n                                        }\n                                        if (this.selectedTypes.includes (newproty)) {\n                                            res.push(problem)\n                                        }\n                                    }\n                                }\n                                else {\n                                    let stringToSearch = problem.topicsString.toString().concat (\" \", problem.body, \" \", problem.title).toLowerCase ()\n                                    if (stringToSearch.includes (this.keyToSearch.toLowerCase())) {\n                                        if (this.selectedTypes.length===0)\n                                            res.push (problem)\n                                        else{\n                                            let newproty='';\n                                            if (problem.type==='SA'){\n                                                newproty= 'Short Answer (SA)'\n                                            }\n                                            if (problem.type==='LA'){\n                                                newproty= 'Long Answer (LA)'\n                                            }\n                                            if (problem.type==='MC'){\n                                                newproty= 'Multiple Choice (MC)'\n                                            }\n                                            if (problem.type==='TF'){\n                                                newproty= 'True or False (TF)'\n                                            }\n                                            if (this.selectedTypes.includes (newproty)) {\n                                                res.push(problem)\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (this.form_select.tsort === 'Title'){\n                res.sort (function (a,b) {\n                    if (a.title < b.title) return -1\n                    else return 1\n                })\n            }\n            else if (this.form_select.tsort === 'Score'){\n                res.sort (function (a,b) {\n                    if (a.score > b.score) return -1\n                    else return 1\n                })\n            }\n            else if (this.form_select.tsort === 'qualifiers'){\n                res.sort (function (a,b) {\n                    if (a.qualifiers > b.qualifiers) return -1\n                    else return 1\n                })\n            }\n            return res\n        },\n\n        getSubjects : function () {\n            let finalSubjects = []\n            let tempTags = []\n            if (this.infoproblems.length > 0){\n                for (let problem of this.infoproblems) {\n                    tempTags = tempTags.concat(problem.topicsString)\n                }\n                tempTags = [...new Set(tempTags)]\n                for (let tTag of tempTags) {\n                    finalSubjects.push ({'name' : tTag, 'state' : true})\n                }\n                finalSubjects.sort(function(a, b){\n                    if (a.name > b.name)\n                    return 1\n                    if (a.name < b.name)\n                    return -1\n                    return 0\n                })\n            }\n            return finalSubjects\n        },\n\n        getTypes : function () {\n            let finalTypes = []\n            let tempTags = []\n            if (this.infoproblems.length > 0){\n                for (let problem of this.infoproblems) {\n                    tempTags = tempTags.concat(problem.type)\n                }\n                tempTags = [...new Set(tempTags)]\n                for (let tTag of tempTags) {\n                    if (tTag=='SA'){\n                        finalTypes.push ({'name' : 'Short Answer (SA)', 'state' : true})\n                    }\n                    if (tTag=='MC'){\n                        finalTypes.push ({'name' : 'Multiple Choise (MC)', 'state' : true})\n                    }\n                    if (tTag=='LA'){\n                        finalTypes.push ({'name' : 'Long Answer (LA)', 'state' : true})\n                    }\n                    if (tTag=='TF'){\n                        finalTypes.push ({'name' : 'True or False (TF)', 'state' : true})\n                    }\n                }\n                finalTypes.sort(function(a, b){\n                    if (a.name > b.name)\n                        return 1\n                    if (a.name < b.name)\n                        return -1\n                    return 0\n                })\n            }\n            return finalTypes\n        }\n    }\n\n\n}\n</script>\n"],"sourceRoot":"src/views"}]}